{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/style/GlobalStyle.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","Fragment","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","GlobalStyle","createGlobalStyle","_templateObject","reset","theme","base0","text2","notice","highlight","text3","link","Theme","base1","text0","text1","Layout","react_default","gatsby_browser_entry","styled_components_browser_esm","_4130953669","node"],"mappings":"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","file":"component---src-pages-404-js-f5bdda7f27d259e47732.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  html {\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n\n  *, *:after, *:before {\n    box-sizing: inherit;\n  }\n\n  body {\n    background: ${props => props.theme.base0};\n    color: ${props => props.theme.text2};\n    font-family: Helvetica Neue,Helvetica,Arial,sans-serif;\n    font-size: 2rem;\n    margin: 0;\n  }\n\n  h1 {\n    color: ${props => props.theme.notice};\n    font-size: 4rem;\n    font-weight: bold;\n    margin: 0 0 2rem 0;\n  }\n\n  h2 {\n    color: ${props => props.theme.highlight};\n    font-size: 3rem;\n    font-weight: bold;\n    margin: 0 0 2rem 0;\n  }\n\n  strong {\n    color: ${props => props.theme.text3};\n    font-weight: bold;\n  }\n\n  p {\n    line-height: 1.3;\n    margin: 0 0 2rem 0;\n    text-align: justify;\n  }\n\n  a {\n    color: ${props => props.theme.link};\n    font-weight: bold;\n    text-decoration: underline;\n  }\n`\n\nconst solarized = {\n  base03: '#002b36',\n  base02: '#073642',\n  base01: '#586e75',\n  base00: '#657b83',\n  base0: '#839496',\n  base1: '#93a1a1',\n  base2: '#eee8d5',\n  base3: '#fdf6e3',\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '#6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n}\n\nexport const Theme = {\n  base0: solarized.base03,\n  base1: solarized.base02,\n  text0: solarized.base01,\n  text1: solarized.base00,\n  text2: solarized.base0,\n  text3: solarized.base1,\n  link: solarized.blue,\n  notice: solarized.green,\n  highlight: solarized.yellow,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalStyle, Theme } from 'components/style/GlobalStyle'\n\nconst metadataQuery = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={metadataQuery}\n    render={data => (\n      <ThemeProvider theme={Theme}>\n        <>\n          <GlobalStyle />\n          {children}\n        </>\n      </ThemeProvider>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}