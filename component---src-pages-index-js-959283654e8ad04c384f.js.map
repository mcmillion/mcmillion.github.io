{"version":3,"sources":["webpack:///./src/components/CenteredPage.jsx","webpack:///./src/components/FlexBlocks.jsx","webpack:///./src/components/Portrait.jsx","webpack:///./src/components/IconLink.jsx","webpack:///./src/components/ContactBlock.jsx","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/style/GlobalStyle.js","webpack:///./src/components/layout.js"],"names":["Container","styled","section","withConfig","displayName","componentId","Page","CenteredPage","_ref","children","react_default","a","createElement","FlexBlocks","div","FlexBlock","props","width","PortraitFrame","imageQuery","Image","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2879088454","TwitterIcon","GithubIcon","KeybaseIcon","LinkedInIcon","IconBase","css","theme","link","StyledTwitterIcon","StyledGithubIcon","StyledKeybaseIcon","StyledLinkedInIcon","StyledLink","IconLink","type","url","href","iconForType","ContactList","ul","ContactItem","li","ContactBlock","__webpack_require__","d","__webpack_exports__","IndexPage","markdown","layout","seo","title","keywords","react_markdown_default","source","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","finalData","Fragment","Consumer","m","module","exports","require","default","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","GlobalStyle","createGlobalStyle","_templateObject","reset","base0","text2","notice","highlight","text3","Theme","base1","text0","text1","Layout","styled_components_browser_esm","_4130953669"],"mappings":"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","file":"component---src-pages-index-js-959283654e8ad04c384f.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.section`\n  align-content: center;\n  align-items: center;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  margin: 2rem;\n`\n\nconst Page = styled.section`\n  flex: 0 0 auto;\n`\n\nexport default function CenteredPage({ children }) {\n  return (\n    <Container>\n      <Page>{children}</Page>\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const FlexBlocks = styled.div`\n  align-content: center;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n`\n\nexport const FlexBlock = styled.section`\n  flex: 0 0 auto;\n  margin: 1em;\n  width: ${props => (props.width ? props.width : 'auto')};\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nexport const PortraitFrame = styled.div`\n  border-radius: 50%;\n  height: 256px;\n  position: relative;\n  width: 256px;\n\n  img {\n    border-radius: 50%;\n  }\n`\n\nconst imageQuery = graphql`\n  query {\n    placeholderImage: file(relativePath: { eq: \"mcmillion-portrait.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 768) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nexport default function Image() {\n  return (\n    <StaticQuery\n      query={imageQuery}\n      render={data => (\n        <PortraitFrame>\n          <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n        </PortraitFrame>\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport TwitterIcon from 'svgs/twitter.svg'\nimport GithubIcon from 'svgs/github.svg'\nimport KeybaseIcon from 'svgs/keybase.svg'\nimport LinkedInIcon from 'svgs/linkedin.svg'\n\nconst IconBase = css`\n  display: inline-block;\n  fill: ${props => props.theme.link};\n  height: 4rem;\n  margin: 0;\n  vertical-align: middle;\n  width: 4rem;\n`\n\nconst StyledTwitterIcon = styled(TwitterIcon)`\n  ${IconBase}\n`\n\nconst StyledGithubIcon = styled(GithubIcon)`\n  ${IconBase}\n`\n\nconst StyledKeybaseIcon = styled(KeybaseIcon)`\n  ${IconBase}\n`\n\nconst StyledLinkedInIcon = styled(LinkedInIcon)`\n  ${IconBase}\n`\n\nconst StyledLink = styled.a`\n  color: ${props => props.theme.link};\n  font-size: 1.5rem;\n  text-decoration: none;\n`\n\nfunction iconForType(type) {\n  switch (type) {\n    case 'twitter':\n      return <StyledTwitterIcon />\n\n    case 'github':\n      return <StyledGithubIcon />\n\n    case 'keybase':\n      return <StyledKeybaseIcon />\n\n    case 'linkedin':\n      return <StyledLinkedInIcon />\n\n    default:\n      return null\n  }\n}\n\nexport default function IconLink({ type, url }) {\n  return <StyledLink href={url}>{iconForType(type)}</StyledLink>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport IconLink from 'components/IconLink'\n\nconst ContactList = styled.ul`\n  margin: 2rem 0;\n`\n\nconst ContactItem = styled.li`\n  display: inline-block;\n  margin: 0 2rem;\n\n  &:first-child {\n    margin-left: 0;\n  }\n\n  &:last-child {\n    margin-right 0;\n  }\n`\n\nexport default function ContactBlock() {\n  return (\n    <ContactList>\n      <ContactItem>\n        <IconLink type=\"twitter\" url=\"https://www.twitter.com/mattisadev\" />\n      </ContactItem>\n      <ContactItem>\n        <IconLink type=\"github\" url=\"https://github.com/mcmillion\" />\n      </ContactItem>\n      <ContactItem>\n        <IconLink type=\"keybase\" url=\"https://keybase.io/mcmillion\" />\n      </ContactItem>\n      <ContactItem>\n        <IconLink\n          type=\"linkedin\"\n          url=\"https://www.linkedin.com/in/matthewmcmillion/\"\n        />\n      </ContactItem>\n    </ContactList>\n  )\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport Layout from 'components/layout'\nimport SEO from 'components/seo'\nimport CenteredPage from 'components/CenteredPage'\nimport { FlexBlocks, FlexBlock } from 'components/FlexBlocks'\nimport Portrait from 'components/Portrait'\nimport ContactBlock from 'components/ContactBlock'\n\nconst markdown = `\n# Hi!\n\nMy name is **Matthew McMillion**. I'm a software developer from Little Rock, Arkansas.\n\nCurrently, I work as **Lead Engineer** for a fantastic team of developers at [Stitch Fix](https://www.stitchfix.com).\n\nI love dogs, Vim, and mechanical keyboards.\n`\n\nexport default function IndexPage() {\n  return (\n    <Layout>\n      <CenteredPage>\n        <SEO\n          title=\"Home\"\n          keywords={[\n            'mcmillion',\n            'software',\n            'developer',\n            'software developer',\n            'engineer',\n          ]}\n        />\n        <FlexBlocks>\n          <FlexBlock>\n            <Portrait />\n          </FlexBlock>\n          <FlexBlock width=\"450px\">\n            <ReactMarkdown source={markdown} />\n            <ContactBlock />\n          </FlexBlock>\n        </FlexBlocks>\n      </CenteredPage>\n    </Layout>\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  html {\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n\n  *, *:after, *:before {\n    box-sizing: inherit;\n  }\n\n  body {\n    background: ${props => props.theme.base0};\n    color: ${props => props.theme.text2};\n    font-family: Helvetica Neue,Helvetica,Arial,sans-serif;\n    font-size: 2rem;\n    margin: 0;\n  }\n\n  h1 {\n    color: ${props => props.theme.notice};\n    font-size: 4rem;\n    font-weight: bold;\n    margin: 0 0 2rem 0;\n  }\n\n  h2 {\n    color: ${props => props.theme.highlight};\n    font-size: 3rem;\n    font-weight: bold;\n    margin: 0 0 2rem 0;\n  }\n\n  strong {\n    color: ${props => props.theme.text3};\n    font-weight: bold;\n  }\n\n  p {\n    line-height: 1.3;\n    margin: 0 0 2rem 0;\n    text-align: justify;\n  }\n\n  a {\n    color: ${props => props.theme.link};\n    font-weight: bold;\n    text-decoration: underline;\n  }\n`\n\nconst solarized = {\n  base03: '#002b36',\n  base02: '#073642',\n  base01: '#586e75',\n  base00: '#657b83',\n  base0: '#839496',\n  base1: '#93a1a1',\n  base2: '#eee8d5',\n  base3: '#fdf6e3',\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '#6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n}\n\nexport const Theme = {\n  base0: solarized.base03,\n  base1: solarized.base02,\n  text0: solarized.base01,\n  text1: solarized.base00,\n  text2: solarized.base0,\n  text3: solarized.base1,\n  link: solarized.blue,\n  notice: solarized.green,\n  highlight: solarized.yellow,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalStyle, Theme } from 'components/style/GlobalStyle'\n\nconst metadataQuery = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={metadataQuery}\n    render={data => (\n      <ThemeProvider theme={Theme}>\n        <>\n          <GlobalStyle />\n          {children}\n        </>\n      </ThemeProvider>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}