{"version":3,"sources":["webpack:///./src/pages/page-2.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/style/GlobalStyle.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","SecondPage","a","createElement","title","to","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","GlobalStyle","createGlobalStyle","_templateObject","reset","theme","base0","text0","Theme","base1","text1","text2","text4","link","Layout","react_default","gatsby_browser_entry","styled_components_browser_esm","Fragment","_4130953669","node"],"mappings":"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","file":"component---src-pages-page-2-js-7835d5b995775ed08a7e.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"Page two\" />\n    <h1>Hi from the second page</h1>\n    <p>Welcome to page 2</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default SecondPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  html {\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n\n  *, *:after, *:before {\n    box-sizing: inherit;\n  }\n\n  body {\n    background: ${props => props.theme.base0};\n    color: ${props => props.theme.text0};\n    font-family: Helvetica Neue,Helvetica,Arial,sans-serif;\n    font-size: 1.5rem;\n    margin: 0;\n  }\n`\n\nconst solarized = {\n  base03: '#002b36',\n  base02: '#073642',\n  base01: '#586e75',\n  base00: '#657b83',\n  base0: '#839496',\n  base1: '#93a1a1',\n  base2: '#eee8d5',\n  base3: '#fdf6e3',\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '#6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n}\n\nexport const Theme = {\n  base0: solarized.base3,\n  base1: solarized.base2,\n  text0: solarized.base01,\n  text1: solarized.base00,\n  text2: solarized.base0,\n  text4: solarized.base1,\n  link: solarized.blue,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalStyle, Theme } from 'components/style/GlobalStyle'\n\nconst metadataQuery = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={metadataQuery}\n    render={data => (\n      <ThemeProvider theme={Theme}>\n        <>\n          <GlobalStyle />\n          {children}\n        </>\n      </ThemeProvider>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}