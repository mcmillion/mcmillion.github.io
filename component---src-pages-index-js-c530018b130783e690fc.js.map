{"version":3,"sources":["webpack:///./src/components/CenteredPage.jsx","webpack:///./src/components/FlexBlocks.jsx","webpack:///./src/components/Portrait.jsx","webpack:///./src/components/IconLink.jsx","webpack:///./src/components/ContactBlock.jsx","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/style/GlobalStyle.js","webpack:///./src/components/layout.js"],"names":["Container","styled","section","withConfig","displayName","componentId","Page","CenteredPage","_ref","children","react_default","a","createElement","FlexBlocks","div","FlexBlock","props","width","PortraitFrame","imageQuery","Image","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2879088454","TwitterIcon","GithubIcon","KeybaseIcon","LinkedInIcon","IconBase","css","theme","link","StyledTwitterIcon","StyledGithubIcon","StyledKeybaseIcon","StyledLinkedInIcon","StyledLink","IconLink","type","url","href","iconForType","ContactList","ul","ContactItem","li","ContactBlock","__webpack_require__","d","__webpack_exports__","IndexPage","markdown","layout","seo","title","keywords","react_markdown_default","source","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","GlobalStyle","createGlobalStyle","_templateObject","reset","base0","text2","notice","highlight","text3","Theme","base1","text0","text1","Layout","styled_components_browser_esm","Fragment","_4130953669","node"],"mappings":"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","file":"component---src-pages-index-js-c530018b130783e690fc.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.section`\n  align-content: center;\n  align-items: center;\n  display: flex;\n  height: 100vh;\n  justify-content: center;\n  margin: 2rem;\n`\n\nconst Page = styled.section`\n  flex: 0 0 auto;\n`\n\nexport default function CenteredPage({ children }) {\n  return (\n    <Container>\n      <Page>{children}</Page>\n    </Container>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport const FlexBlocks = styled.div`\n  align-content: center;\n  align-items: center;\n  display: flex;\n  justify-content: center;\n`\n\nexport const FlexBlock = styled.section`\n  flex: 0 0 auto;\n  margin: 1em;\n  width: ${props => (props.width ? props.width : 'auto')};\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nexport const PortraitFrame = styled.div`\n  border-radius: 50%;\n  height: 256px;\n  position: relative;\n  width: 256px;\n\n  img {\n    border-radius: 50%;\n  }\n`\n\nconst imageQuery = graphql`\n  query {\n    placeholderImage: file(relativePath: { eq: \"mcmillion-portrait.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 768) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n\nexport default function Image() {\n  return (\n    <StaticQuery\n      query={imageQuery}\n      render={data => (\n        <PortraitFrame>\n          <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n        </PortraitFrame>\n      )}\n    />\n  )\n}\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport TwitterIcon from 'svgs/twitter.svg'\nimport GithubIcon from 'svgs/github.svg'\nimport KeybaseIcon from 'svgs/keybase.svg'\nimport LinkedInIcon from 'svgs/linkedin.svg'\n\nconst IconBase = css`\n  display: inline-block;\n  fill: ${props => props.theme.link};\n  height: 4rem;\n  margin: 0;\n  vertical-align: middle;\n  width: 4rem;\n`\n\nconst StyledTwitterIcon = styled(TwitterIcon)`\n  ${IconBase}\n`\n\nconst StyledGithubIcon = styled(GithubIcon)`\n  ${IconBase}\n`\n\nconst StyledKeybaseIcon = styled(KeybaseIcon)`\n  ${IconBase}\n`\n\nconst StyledLinkedInIcon = styled(LinkedInIcon)`\n  ${IconBase}\n`\n\nconst StyledLink = styled.a`\n  color: ${props => props.theme.link};\n  font-size: 1.5rem;\n  text-decoration: none;\n`\n\nfunction iconForType(type) {\n  switch (type) {\n    case 'twitter':\n      return <StyledTwitterIcon />\n\n    case 'github':\n      return <StyledGithubIcon />\n\n    case 'keybase':\n      return <StyledKeybaseIcon />\n\n    case 'linkedin':\n      return <StyledLinkedInIcon />\n\n    default:\n      return null\n  }\n}\n\nexport default function IconLink({ type, url }) {\n  return <StyledLink href={url}>{iconForType(type)}</StyledLink>\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport IconLink from 'components/IconLink'\n\nconst ContactList = styled.ul`\n  margin: 2rem 0;\n`\n\nconst ContactItem = styled.li`\n  display: inline-block;\n  margin: 0 2rem;\n\n  &:first-child {\n    margin-left: 0;\n  }\n\n  &:last-child {\n    margin-right 0;\n  }\n`\n\nexport default function ContactBlock() {\n  return (\n    <ContactList>\n      <ContactItem>\n        <IconLink type=\"twitter\" url=\"https://www.twitter.com/mattisadev\" />\n      </ContactItem>\n      <ContactItem>\n        <IconLink type=\"github\" url=\"https://github.com/mcmillion\" />\n      </ContactItem>\n      <ContactItem>\n        <IconLink type=\"keybase\" url=\"https://keybase.io/mcmillion\" />\n      </ContactItem>\n      <ContactItem>\n        <IconLink\n          type=\"linkedin\"\n          url=\"https://www.linkedin.com/in/matthewmcmillion/\"\n        />\n      </ContactItem>\n    </ContactList>\n  )\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport Layout from 'components/layout'\nimport SEO from 'components/seo'\nimport CenteredPage from 'components/CenteredPage'\nimport { FlexBlocks, FlexBlock } from 'components/FlexBlocks'\nimport Portrait from 'components/Portrait'\nimport ContactBlock from 'components/ContactBlock'\n\nconst markdown = `\n# Hi!\n\nMy name is **Matthew McMillion**. I'm a software develper from Little Rock, Arkansas.\n\nCurrently, I work as **Lead Engineer** for a fantastic team of developers at [Stitch Fix](https://www.stitchfix.com).\n\nI love dogs, Vim, and mechanical keyboards.\n`\n\nexport default function IndexPage() {\n  return (\n    <Layout>\n      <CenteredPage>\n        <SEO\n          title=\"Home\"\n          keywords={[\n            'mcmillion',\n            'software',\n            'developer',\n            'software developer',\n            'engineer',\n          ]}\n        />\n        <FlexBlocks>\n          <FlexBlock>\n            <Portrait />\n          </FlexBlock>\n          <FlexBlock width=\"450px\">\n            <ReactMarkdown source={markdown} />\n            <ContactBlock />\n          </FlexBlock>\n        </FlexBlocks>\n      </CenteredPage>\n    </Layout>\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\n\nexport const GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  html {\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n\n  *, *:after, *:before {\n    box-sizing: inherit;\n  }\n\n  body {\n    background: ${props => props.theme.base0};\n    color: ${props => props.theme.text2};\n    font-family: Helvetica Neue,Helvetica,Arial,sans-serif;\n    font-size: 2rem;\n    margin: 0;\n  }\n\n  h1 {\n    color: ${props => props.theme.notice};\n    font-size: 4rem;\n    font-weight: bold;\n    margin: 0 0 2rem 0;\n  }\n\n  h2 {\n    color: ${props => props.theme.highlight};\n    font-size: 3rem;\n    font-weight: bold;\n    margin: 0 0 2rem 0;\n  }\n\n  strong {\n    color: ${props => props.theme.text3};\n    font-weight: bold;\n  }\n\n  p {\n    line-height: 1.3;\n    margin: 0 0 2rem 0;\n    text-align: justify;\n  }\n\n  a {\n    color: ${props => props.theme.link};\n    font-weight: bold;\n    text-decoration: underline;\n  }\n`\n\nconst solarized = {\n  base03: '#002b36',\n  base02: '#073642',\n  base01: '#586e75',\n  base00: '#657b83',\n  base0: '#839496',\n  base1: '#93a1a1',\n  base2: '#eee8d5',\n  base3: '#fdf6e3',\n  yellow: '#b58900',\n  orange: '#cb4b16',\n  red: '#dc322f',\n  magenta: '#d33682',\n  violet: '#6c71c4',\n  blue: '#268bd2',\n  cyan: '#2aa198',\n  green: '#859900',\n}\n\nexport const Theme = {\n  base0: solarized.base03,\n  base1: solarized.base02,\n  text0: solarized.base01,\n  text1: solarized.base00,\n  text2: solarized.base0,\n  text3: solarized.base1,\n  link: solarized.blue,\n  notice: solarized.green,\n  highlight: solarized.yellow,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalStyle, Theme } from 'components/style/GlobalStyle'\n\nconst metadataQuery = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={metadataQuery}\n    render={data => (\n      <ThemeProvider theme={Theme}>\n        <>\n          <GlobalStyle />\n          {children}\n        </>\n      </ThemeProvider>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}